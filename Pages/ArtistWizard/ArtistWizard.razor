@page "/artist-wizard"
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms

<title>Rhyme Engine | Artist Wizard</title>

@code {
    private int currentStep = 0;
    private ArtistOnboardingModel artistModel = new ArtistOnboardingModel();
    private static readonly Type[] StepComponents = {
        typeof(ArtistDetailsStep),
        typeof(SongMetadataStep),
        typeof(LyricsStep),
        typeof(AudioFilesStep),
        typeof(MusicVideosStep),
        typeof(RelatedContentStep),
        typeof(CreditsStep),
        typeof(DiscographyStep),
        typeof(UpcomingEventsStep),
        typeof(FanInteractionStep),
        typeof(MerchandiseStoreStep),
        typeof(PressAndMediaStep),
        typeof(CollaborationsStep),
        typeof(BookingInfoStep),
        typeof(VisualizerAndGraphicsStep),
        typeof(PerformanceAndTourStep),
        typeof(SystemAndToolsIntegrationStep),
        typeof(AnalyticsAndReportingStep),
        typeof(MarketingAndPromotionStep),
        typeof(AdditionalNotesStep)
    };

    private Type CurrentStepComponent => StepComponents[currentStep];

    private void NextStep()
    {
        if (currentStep < StepComponents.Length - 1)
        {
            currentStep++;
        }
    }

    private void PreviousStep()
    {
        if (currentStep > 0)
        {
            currentStep--;
        }
    }

    private void Finish()
    {
        // Handle form submission logic here
    }
}

<div class="container mt-4 text-light mb-4 mt-4 text-light row row-cols-1 row-cols-md-1 row-cols-lg-2 row-cols-xxl-3 g-3">
    
    
    <EditForm Model="@artistModel" OnValidSubmit="Finish">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="progress mb-4" style="height: 50px;" role="progressbar" aria-valuenow="@(currentStep * 100 / (StepComponents.Length - 1))" aria-valuemin="0" aria-valuemax="100">
        <div class="progress-bar progress-bar-striped progress-bar-animated" style="width: @(currentStep * 100 / (StepComponents.Length - 1))%;">@(currentStep * 100 / (StepComponents.Length - 1))%</div>
    </div>

    <div class="d-flex justify-content-between mt-4 mb-4">
            <button type="button" class="btn btn-secondary" @onclick="PreviousStep" disabled="@(!CanGoBack)">Previous</button>
            @if (currentStep < StepComponents.Length - 1)
            {
                <button type="button" class="btn btn-primary" @onclick="NextStep">Next</button>
            }
            else
            {
                <button type="submit" class="btn btn-success">Finish</button>
            }
        </div>

        <DynamicComponent Type="CurrentStepComponent" Parameters="@(new Dictionary<string, object> { { "Model", artistModel } })" />
        

        
    </EditForm>
</div>

@code {
    private bool CanGoBack => currentStep > 0;
}
